install.packages(tidyverse)
install.packages("tidyverse")
require(tidyverse)
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
install.packages("devtools")
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
install.packages("tidyverse")
require(tidyverse)
data()
View(starwars)
starwars %>%
select(gender,mass,height,species)
source('~/Desktop/upload/Programming/R/00-starwars.R')
starwars %>%
select(gender,mass,height,species) %>%
filter(species == "Human") %>%
na.omit()
source('~/Desktop/upload/Programming/R/00-starwars.R')
# View(starwars)  # lots of data
# pipe , select vars, filter by, and remove NA's.
# height in meters , calculate BMI and group by sex
starwars %>%
select(gender,mass,height,species) %>%
filter(species == "Human") %>%
na.omit() %>%
mutate(height = height / 100) %>%
mutate(BMI = mass/height^2) %>%
group_by(gender) %>%
summarise(Average_BMI = mean(BMI))
install.packages("gapminder")
data("gapminder")
data()
library(tidyverse)
ChickWeight
head((ChickWeight))
ChickWeight
head((ChickWeight))
ChickWeight
library(tidyverse)
ChickWeight %>%
select(Chick,weight,Diet) %>%
group_by(Diet) %>%
summarise(Chick)
ChickWeight %>%
select(Chick,weight,Diet) %>%
group_by(Diet) %>%
summarise(weight)
ChickWeight %>%
select(Chick,weight,Diet) %>%
group_by(Diet)
USArrests
head(USArrests)
USArrests %>%
select(state,Rape) %>%
# https://rpubs.com/meisenbach/284590
if (!require(mlbench)) {
install.packages('mlbench')
}
library(mxnet)
if (!require(readr)) {
install.packages('readr')
}
# https://rpubs.com/meisenbach/284590
if (!require(mlbench)) {
install.packages('mlbench')
}
library(mxnet)
if (!require(readr)) {
install.packages('readr')
}
library(readr)
library(ISLR)
install.packages("ISLR")
library(ISLR)
summary(Wage)
lm(wage~year+age,data=Wage)
## maybe str(Wage) ; plot(Wage)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
if (!require(ISLR)) {
install.packages('ISLR')
}
library(ISLR)
summary(Wage)
knitr::opts_chunk$set(echo = TRUE)
if (!require(ISLR)) {
install.packages('ISLR')
}
library(ISLR)
head(Wage)
summary(Wage)
source('~/Desktop/upload/Programming/R/ifrequiremxnet.R')
source('~/Desktop/upload/Programming/R/ifrequiremxnet.R')
#train_orig <- read_csv("train.csv")
library(ISLR)
attach(Wage)
head(Wage)
str(Wage)
install.packages('dplyr')
install.packages('explore')
library(dplyr)
library(explore)
wage %>% explore_tbl()
Wage %>% explore_tbl()
str(Wage)
Wage %>% explore_tbl()
Wage %>% describe()
Wage %>% explore_all()
Wage %>%
select(year, age, maritl, wage, education) %>%
explore_all(target = wage)
---
title: "MT Cars Data Analysis"
author: "Carlos Martinez"
date: "1/17/2021"
output: html_document
---
swirl()
library("swirl")
swirl()
install_course("Regression Models")
install_course("Statistical Inference")
install_course("Exploratory Data Analysis")
install_course("Getting and Cleaning Data")
install_course("Advanced R Programming")
install.packages("tidyr")
quit()
install.packages("chron")
quit()
quit()
#setwd("/Users/ceo/apps/MacDischarge/")
setwd("/Users/ceo/Desktop/macos/git/apps/MacDischarge")
#suppressMessages(library(dplyr))    # 5 basic verbs: filter,select,arrange,mutate,summarise + group_by
library(chron)     # converts time to seconds
library(stringr)   # remove whitespace
library(tidyverse)   # functions like mutate etc
#suppressMessages(library(tidyverse)) # includes ggplot2
dat = "data/"                           # data directory
d1 = format(Sys.Date(),"%Y-%m-%d")      # date   Sys.Date()
f1 = toString(d1)                       # convert date to string
f2 = "-bdrate.csv"                     # string variable
fname = paste(dat,f1 ,f2)
flname = str_trim(fname)
fname = str_replace_all(flname, fixed(" "), "")  # clear all spaces
#print(fname)
print(fname) #debug
discharge_rate = read.csv(
#file = '2021-02-22-batterydischargerate.csv',
file = fname,
strip.white = TRUE,
sep = ','
)
# https://stackoverflow.com/questions/29067375/r-convert-hoursminutesseconds
# create a new column of seconds
getSeconds <- function(n) {
i = as.numeric(times(n))
s = 60 * 24 * i
s = as.integer(s)
return(s)
}
# DATE,TIME,DISRATE
# creates a new dataframe dsr
dsr <- discharge_rate %>%
select(DATE,TIME,DISRATE)  %>%
mutate(SECONDS = getSeconds(TIME) )  # add SECONDS COLUMN
select <- discharge_rate %>%
select(DATE,TIME,DISRATE)
select(DATE,TIME,DISRATE)
tmp <-select(TIME,DISRATE)
# https://stackoverflow.com/questions/29067375/r-convert-hoursminutesseconds
# create a new column of seconds
getSeconds <- function(n) {
i = as.numeric(times(n))
s = 60 * 24 * i
s = as.integer(s)
return(s)
}
source('~/Desktop/macos/git/apps/MacDischarge/analyze-battery.R')
source('~/Desktop/macos/git/apps/MacDischarge/analyze-bat2-test.R')
source('~/Desktop/macos/git/apps/MacDischarge/analyze-bat2-test.R')
#!/usr/local/bin/Rscript
# /Users/ceo/apps/MacDischarge/
# setwd("/Users/ceo/apps/MacDischarge/")
setwd("/Users/ceo/Desktop/macos/git/apps/MacDischarge")
suppressMessages(library(dplyr))  # 5 basic verbs: filter,select,arrange,mutate,summarise + group_by
library(chron)     # converts time to seconds
library(stringr)   # remove whitespace
suppressMessages(library(tidyverse)) # includes ggplot2
dat = "data/"                           # data directory
d1 = format(Sys.Date(),"%Y-%m-%d")      # date   Sys.Date()
f1 = toString(d1)                       # convert date to string
f2 = "-bdrate.csv"                     # string variable
fname = paste(dat,f1 ,f2)
flname = str_trim(fname)
fname = str_replace_all(flname, fixed(" "), "")  # clear all spaces
discharge_rate = read.csv(
#file = '2021-02-22-batterydischargerate.csv',
file = fname,
strip.white = TRUE,
sep = ','
)
# https://stackoverflow.com/questions/29067375/r-convert-hoursminutesseconds
# create a new column of seconds
getSeconds <- function(n) {
i = as.numeric(times(n))
s = 60 * 24 * i
s = as.integer(s)
return(s)
}
# DATE,TIME,DISRATE
# creates a new dataframe dsr
dsr <- discharge_rate %>%
select(DATE,TIME,DISRATE)  %>%
mutate(SECONDS = getSeconds(TIME) )  # add SECONDS COLUMN
# DATE,TIME,DISRATE
# creates a new dataframe dsr
dsr <- discharge_rate %>%
select(DATE,TIME,DISRATE)  %>%
mutate(SECONDS = getSeconds(TIME) )  # add SECONDS COLUMN
#!/usr/local/bin/Rscript
# battery-discharge.sh is the data log creator
# DATE,TIME,DISRATE
# /Users/ceo/apps/MacDischarge/$D-bdrate.csv
setwd("/Users/ceo/Desktop/macos/git/apps/MacDischarge/")
#suppressMessages(library(dplyr))   # 5 basic verbs: filter,select,arrange,mutate,summarise + group_by
library(chron)     # converts time to seconds
library(stringr)   # remove whitespace
suppressMessages(library(tidyverse)) # includes ggplot2
dat = "data/"                           # data directory
d1 = format(Sys.Date(),"%Y-%m-%d")      # date   Sys.Date()
f1 = toString(d1)                       # convert date to string
f2 = "-bdrate.csv"                     # string variable
fname = paste(dat,f1 ,f2)
flname = str_trim(fname)
fname = str_replace_all(flname, fixed(" "), "")  # clear all spaces
discharge_rate = read.csv(
#file = '2021-02-22-batterydischargerate.csv',
file = fname,
strip.white = TRUE,
sep = ','
)
# https://stackoverflow.com/questions/29067375/r-convert-hoursminutesseconds
# create a new column of seconds
getSeconds <- function(n) {
i = as.numeric(times(n))
s = 60 * 24 * i
s = as.integer(s)
return(s)
}
# DATE,TIME,DISRATE
# creates a new dataframe dsr
dsr <- discharge_rate %>%
select(DATE,TIME,DISRATE)  %>%
mutate(SECONDS = getSeconds(TIME) )  # add SECONDS COLUMN
select(DATE,TIME,DISRATE)
print(discharge_rate)
print(discharge_rate)
dsr <- discharge_rate
dsr <- discharge_rate %>% select(DATE,TIME,DISRATE)
library(dplyr)
dsr <- discharge_rate %>% select(DATE,TIME,DISRATE)
source('~/Desktop/macos/git/apps/MacDischarge/analyze-bat1-png.R')
dsr
select(discharge_rate) %>% mutate(SECONDS = getSeconds(TIME)
)
select(discharge_rate) %>% mutate(SECONDS = getSeconds(TIME))
select(discharge_rate)
dsr
dsr <- select(discharge_rate) %>% mutate(SECONDS = getSeconds(TIME))
dsr <- select(discharge_rate) %>% select(DATE,TIME,DISRATE)
View(dsr)
dsr <- select(discharge_rate) %>% select(X2022.01.25,X10.39.57,X20)
dsr <- select(discharge_rate) %>% select(X2022.01.25,X10.39.57,X20)
rlang::last_error()
dsr <- select(discharge_rate) %>% select(X2022.01.25,X10.39.57,X20)
